#!/bin/bash -e

DEST_DIR="/rootfs"
F_STATUS="/tmp/files"
P_STATUS="/tmp/pkgs"

get_os_name(){
  cat /etc/*-release |grep ^NAME |uniq | awk -F= '{print $NF}'
}


pkg_mgr_type(){
  OS_NAME=$(get_os_name)
  case "$OS_NAME" in
    *Redhat*|*Fedora*|*Centos*)
      os_pkg_mgr="rpm"
      pkg_own_cmd="rpm -qf" ;;
    *Ubuntu*|*Debian*)
      os_pkg_mgr="dpkg"
      pkg_own_cmd="dpkg -S" ;;
    *Alpine*)
      os_pkg_mgr="apk"
      pkg_own_cmd="apk info --who-owns" ;;
    *)  echo "Running on non supported package manager" && exit ;;
  esac
}

pkg_own(){
  local file=$1
  ${pkg_own_cmd} ${file} || return
}

pkg_status(){
  local file=$1
  pkg=$(pkg_own ${file})

  if [ -z "${pkg}" ]; then
    echo "${file} doesn't belong to any package" 1>&2
    return
  fi

  grep -q ${pkg} ${P_STATUS} || echo ${pkg} >> ${P_STATUS}
}


copy_f(){
  local f=$1
  fb=$(basename "${f}")

  [ -e "$f" ] || ( error "$f does not exist!" && exit )

  if [[ "${fb}" =~ ^libc.so* ]] || [[ "${fb}" =~  ^ld-linux* ]] || [[ "${fb}" =~  ^ld-musl* ]]; then
    echo "Skipping ${fb} which is not allowed to copy" 1>&2
    return
  fi

  # File already copied
    grep -Fxq "$f" ${F_STATUS} && return

#  # TODO: check all condition for get_os_name()
#  if [ -e "${DEST_DIR}/$f" ] || [ -e "${DEST_DIR}/lib/${fb}" ] || [ -e "${DEST_DIR}/bin/${fb}" ]; then
#    echo "${DEST_DIR}/$f already exists"
#    return
#  fi

  t_dir=$(dirname "${DEST_DIR}/${f}")
  [ -d "${t_dir}" ] || mkdir -p "${t_dir}"

  cp -aL "$f" "${t_dir}/${fb}" && echo "${f}" >> ${F_STATUS}
  pkg_status "$f"

  # Copy dependency libs
  ldd "${f}" | awk 'NF == 4{ print $3 }' | while read -r lib; do
    echo "Copying ${lib} as a dependency to ${1}"
    copy_f "${lib}"
  done

}


### Main ###
file=$1
if [ ! -f $file ]; then
  echo "$file as file/path not found"
  exit
fi

# Collecting info
pkg_mgr_type

# Creating file with copied files
touch ${F_STATUS} ${P_STATUS} || exit

while [ "$1" != "" ]; do
    copy_f "$1"
    shift
done
echo
echo "Dependency packages for [$file] :"
cat ${P_STATUS}
rm -f ${F_STATUS} ${P_STATUS}
